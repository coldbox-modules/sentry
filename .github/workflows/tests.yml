name: Test Suites

# We are a reusable Workflow only
on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: false

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-20.04
    env:
      DB_USER: root
      DB_PASSWORD: root
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        cfengine: [ "lucee@5", "adobe@2018", "adobe@2021", "adobe@2023" ]
        coldboxVersion: [ "^6.0.0", "^7.0.0" ]
        experimental: [ false ]
        # Here we tests all engines against ColdBox@BE
        include:
          - coldboxVersion: "be"
            cfengine: "lucee@5"
            experimental: true
          - coldboxVersion: "be"
            cfengine: "lucee@6"
            experimental: true
          - coldboxVersion: "be"
            cfengine: "adobe@2021"
            experimental: true
          - coldboxVersion: "be"
            cfengine: "adobe@2023"
            experimental: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # - name: Setup Database and Fixtures
      #   run: |
      #     sudo systemctl start mysql.service
      #     mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} -e 'CREATE DATABASE mementifier;'
      #     mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} < test-harness/tests/resources/coolblog.sql

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup CommandBox CLI
        uses: Ortus-Solutions/setup-commandbox@v2.0.1

      # Not Needed in this module
      #- name: Setup Environment For Testing Process
      #  run: |
      #    # Setup .env
      #    touch .env
      #    # ENV
      #    printf "DB_HOST=localhost\n" >> .env
      #    printf "DB_DATABASE=mydatabase\n" >> .env
      #    printf "DB_DRIVER=MySQL\n" >> .env
      #    printf "DB_USER=${{ env.DB_USER }}\n" >> .env
      #    printf "DB_PASSWORD=${{ env.DB_PASSWORD }}\n" >> .env
      #    printf "DB_CLASS=com.mysql.cj.jdbc.Driver\n" >> .env
      #    printf "DB_BUNDLEVERSION=8.0.19\n" >> .env
      #    printf "DB_BUNDLENAME=com.mysql.cj\n" >> .env

      - name: Install Test Harness with ColdBox ${{ matrix.coldboxVersion }}
        run: |
          box install
          cd test-harness
          box package set dependencies.coldbox=${{ matrix.coldboxVersion }}
          box install

      - name: Start ${{ matrix.cfengine }} Server
        run: |
          box server start serverConfigFile="server-${{ matrix.cfengine }}.json" --noSaveSettings --debug
          curl http://127.0.0.1:60299

      - name: Run Tests
        run: |
          mkdir -p test-harness/tests/results
          box testbox run --verbose outputFile=test-harness/tests/results/test-results outputFormats=json,antjunit

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: test-harness/tests/results/**/*.xml
          check_name: "${{ matrix.cfengine }} ColdBox ${{ matrix.coldboxVersion }} Test Results"

      - name: Upload Test Results to Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.cfengine }}-${{ matrix.coldboxVersion }}
          path: |
            test-harness/tests/results/**/*

      - name: Show Server Log On Failures
        if: ${{ failure() }}
        run: |
          box server log serverConfigFile="server-${{ matrix.cfengine }}.json"

      - name: Upload Debug Logs To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: Failure Debugging Info - ${{ matrix.cfengine }} - ${{ matrix.coldboxVersion }}
          path: |
            .engine/**/logs/*
            .engine/**/WEB-INF/cfusion/logs/*

      - name: Slack Notifications
        # Only on failures and NOT in pull requests
        if: ${{ failure() && !startsWith( 'pull_request', github.event_name ) }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: coding
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: '${{ github.repository }} tests failed :cry:'
          SLACK_TITLE: ${{ github.repository }} Tests For ${{ matrix.cfengine }} with ColdBox ${{ matrix.coldboxVersion }} failed
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
